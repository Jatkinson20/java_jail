This directory serves 2 purposes:
 -- . serves as chroot (changed root) for executing Java programs
 -- ./cp/traceprinter contains a Java program to print traces of Java
    programs as they execute, printing the results to the same JSON
    format used by http://pythontutor.com/

The significant code in this directory is the documentation, and the 
contents of ./cp/traceprinter. Both are released under the GNU Affero 
General Public License, versions 3 or later. See LICENSE or visit:
http://www.gnu.org/licenses/agpl.html

This project would not be possible without the package
com.sun.tools.example.trace, written by Robert Field. The traceprinter 
package was initially created from that package.

=== Setting up a chroot jail for java ===

The good news is that java for linux is available as a single self-contained
archive (we used jdk-7u21-linux-x64.gz). 

The bad news is that it also uses various shared object files not contained
in there, as well as various pseudo-files. So the chroot jail must also
contain these.

For chroot jail to work, the full contents of this directory should be:

./java/: copy of unzipped java installation
./{dev,proc}/: necessary pseudo-files
./{etc,lib64}/: necessary libraries
./cp/: we use this to hold application-specific java classpath stuff
./scratch/: we use this to hold all user-generated files

as well as README, LICENSE, and some .git files.

For commands to compile and execute user code, see java_safe_maketrace.php

What's in jail right now?
ld-linux-x86-64.so.2  libdl.so.2  libjli.so  libm.so.6    libnss_compat.so.2  libnss_files.so.2  libpthread.so.0  librt.so.1
libc.so.6             libjava.so  libjvm.so  libnsl.so.1  libnss_dns.so.2     libnss_nis.so.2    libresolv.so.2

How to find what needs to go in the jail?
- use strace
- use ldd
- install proc
sudo mount -o bind /proc /chroot/proc
(sudo umount /chroot/proc to unmount)
- install dev (see python jail)

Not sure why, but on 5/31/2013 after upgrading to java7, I had to 
mount proc to get rid of a message about threads and one about libjli.so
see: http://interreality.org/~reed/java-chroot.html

Short-term fix: run
  mount --bind /proc /path/to/chroot/proc

Long-term fix: add to /etc/fstab
  /path/to/source/dir /path/to/mount/point none bind 0 0


Also: I had to add 
/sbin/iptables -I OUTPUT 1 -p tcp -d 127.0.0.1 --dport 32000:65535 -m owner --gid-owner 1000 -j ACCEPT
because otherwise all debugger packets were being dropped.

===
TODO
===
intervening stack frames should be shown as dots
<void> -> void
None -> null
True, False -> true, false
list -> array
options for visualizing synthetics